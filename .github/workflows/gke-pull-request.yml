name: Build and Deploy to GKE on PR
'on': pull_request

env:
  PROJECT_ID: aiii-developer
  GAR_LOCATION: asia-east1
  GKE_CLUSTER: dev-cluster
  GKE_ZONE: asia-east1
  DEPLOYMENT_NAME: template-api-gke
  REPOSITORY: develop
  IMAGE: template-api-gke

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_GKE_KEY_AIII_DEVELOPER }}
        export_default_credentials: true

    - name: Set Configure Docker
      run: gcloud auth configure-docker asia-east1-docker.pkg.dev

    - name: Get Tag Name & Set env
      run: echo "RELEASE_VERSION="v1.0.$(date +%s) >> $GITHUB_ENV

    # Get the GKE credentials, so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Update index.ts version
      run: 'sed -i -e "s/RELEASE_VERSION/${{ env.RELEASE_VERSION }}/g" ./src/index.ts'

    - name: Server CI and Build
      run: npm i --force && npm run build

    - name: Test
      run: npm run test

    - name: Docker Build Image
      run: docker build -t asia-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ env.RELEASE_VERSION }}  -t asia-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest .

    - name: Docker Push Image
      run: docker push asia-east1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}  --all-tags

    - name: Update deployment.yaml Tag # 自動修改 yaml 版號
      run:  'sed -i -e "s/\(:\)[0-9\.]\{1,\}\(\"\)/\1${{ env.RELEASE_VERSION }}\2/g" ./.kube/stage-deployment.yaml'

    - name: Deploy To GKE
      run: 'kubectl config use-context ${{ secrets.GCP_AIII_DEVELOPER_GKE_CONTEXT_NAME }} && kubectl apply -f ./.kube/stage-deployment.yaml'
